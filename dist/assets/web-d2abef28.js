var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{W as WebPlugin}from"./index-1329dee8.js";const _AudioAsset=class _AudioAsset{constructor(audio){this.audio=audio}};__name(_AudioAsset,"AudioAsset");let AudioAsset=_AudioAsset;const _NativeAudioWeb=class _NativeAudioWeb extends WebPlugin{async resume(options){const audio=this.getAudioAsset(options.assetId).audio;if(audio.paused)return audio.play()}async pause(options){return this.getAudioAsset(options.assetId).audio.pause()}async getCurrentTime(options){return{currentTime:this.getAudioAsset(options.assetId).audio.currentTime}}async getDuration(options){const audio=this.getAudioAsset(options.assetId).audio;if(Number.isNaN(audio.duration))throw"no duration available";if(!Number.isFinite(audio.duration))throw"duration not available => media resource is streaming";return{duration:audio.duration}}async configure(options){throw"configure is not supported for web: ".concat(JSON.stringify(options))}async preload(options){var _a;if(_NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(options.assetId))throw"AssetId already exists. Unload first if like to change!";if(!(!((_a=options.assetPath)===null||_a===void 0)&&_a.length))throw"no assetPath provided";if(!options.isUrl&&!new RegExp("^/?"+_NativeAudioWeb.FILE_LOCATION).test(options.assetPath)){const slashPrefix=options.assetPath.startsWith("/")?"":"/";options.assetPath="".concat(_NativeAudioWeb.FILE_LOCATION).concat(slashPrefix).concat(options.assetPath)}const audio=new Audio(options.assetPath);audio.autoplay=!1,audio.loop=!1,audio.preload="auto",options.volume&&(audio.volume=options.volume),_NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.set(options.assetId,new AudioAsset(audio))}async play(options){var _a;const audio=this.getAudioAsset(options.assetId).audio;return await this.stop(options),audio.loop=!1,audio.currentTime=(_a=options.time)!==null&&_a!==void 0?_a:0,audio.play()}async loop(options){const audio=this.getAudioAsset(options.assetId).audio;return await this.stop(options),audio.loop=!0,audio.play()}async stop(options){const audio=this.getAudioAsset(options.assetId).audio;audio.pause(),audio.loop=!1,audio.currentTime=0}async unload(options){await this.stop(options),_NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.delete(options.assetId)}async setVolume(options){if(typeof(options==null?void 0:options.volume)!="number")throw"no volume provided";const audio=this.getAudioAsset(options.assetId).audio;audio.volume=options.volume}async isPlaying(options){return{isPlaying:!this.getAudioAsset(options.assetId).audio.paused}}getAudioAsset(assetId){if(this.checkAssetId(assetId),!_NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.has(assetId))throw'no asset for assetId "'.concat(assetId,'" available. Call preload first!');return _NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID.get(assetId)}checkAssetId(assetId){if(typeof assetId!="string")throw"assetId must be a string";if(!(assetId!=null&&assetId.length))throw"no assetId provided"}};__name(_NativeAudioWeb,"NativeAudioWeb");let NativeAudioWeb=_NativeAudioWeb;NativeAudioWeb.FILE_LOCATION="assets/sounds";NativeAudioWeb.AUDIO_ASSET_BY_ASSET_ID=new Map;export{NativeAudioWeb};
