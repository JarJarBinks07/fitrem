var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{W as WebPlugin}from"./index-bbe7be28.js";const _CapacitorSQLiteWeb=class _CapacitorSQLiteWeb extends WebPlugin{constructor(){super(...arguments),this.jeepSqliteElement=null,this.isWebStoreOpen=!1}async initWebStore(){await customElements.whenDefined("jeep-sqlite"),this.jeepSqliteElement=document.querySelector("jeep-sqlite"),this.ensureJeepSqliteIsAvailable(),this.jeepSqliteElement.addEventListener("jeepSqliteImportProgress",event=>{this.notifyListeners("sqliteImportProgressEvent",event.detail)}),this.jeepSqliteElement.addEventListener("jeepSqliteExportProgress",event=>{this.notifyListeners("sqliteExportProgressEvent",event.detail)}),this.jeepSqliteElement.addEventListener("jeepSqliteHTTPRequestEnded",event=>{this.notifyListeners("sqliteHTTPRequestEndedEvent",event.detail)}),this.jeepSqliteElement.addEventListener("jeepSqlitePickDatabaseEnded",event=>{this.notifyListeners("sqlitePickDatabaseEndedEvent",event.detail)}),this.jeepSqliteElement.addEventListener("jeepSqliteSaveDatabaseToDisk",event=>{this.notifyListeners("sqliteSaveDatabaseToDiskEvent",event.detail)}),this.isWebStoreOpen||(this.isWebStoreOpen=await this.jeepSqliteElement.isStoreOpen())}async saveToStore(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.saveToStore(options);return}catch(err){throw new Error("".concat(err))}}async getFromLocalDiskToStore(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.getFromLocalDiskToStore(options);return}catch(err){throw new Error("".concat(err))}}async saveToLocalDisk(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.saveToLocalDisk(options);return}catch(err){throw new Error("".concat(err))}}async echo(options){return this.ensureJeepSqliteIsAvailable(),await this.jeepSqliteElement.echo(options)}async createConnection(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.createConnection(options);return}catch(err){throw new Error("".concat(err))}}async open(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.open(options);return}catch(err){throw new Error("".concat(err))}}async closeConnection(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.closeConnection(options);return}catch(err){throw new Error("".concat(err))}}async getVersion(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.getVersion(options)}catch(err){throw new Error("".concat(err))}}async checkConnectionsConsistency(options){this.ensureJeepSqliteIsAvailable();try{return await this.jeepSqliteElement.checkConnectionsConsistency(options)}catch(err){throw new Error("".concat(err))}}async close(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.close(options);return}catch(err){throw new Error("".concat(err))}}async beginTransaction(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.beginTransaction(options)}catch(err){throw new Error("".concat(err))}}async commitTransaction(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.commitTransaction(options)}catch(err){throw new Error("".concat(err))}}async rollbackTransaction(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.rollbackTransaction(options)}catch(err){throw new Error("".concat(err))}}async isTransactionActive(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.isTransactionActive(options)}catch(err){throw new Error("".concat(err))}}async getTableList(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.getTableList(options)}catch(err){throw new Error("".concat(err))}}async execute(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.execute(options)}catch(err){throw new Error("".concat(err))}}async executeSet(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.executeSet(options)}catch(err){throw new Error("".concat(err))}}async run(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.run(options)}catch(err){throw new Error("".concat(err))}}async query(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.query(options)}catch(err){throw new Error("".concat(err))}}async isDBExists(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.isDBExists(options)}catch(err){throw new Error("".concat(err))}}async isDBOpen(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.isDBOpen(options)}catch(err){throw new Error("".concat(err))}}async isDatabase(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.isDatabase(options)}catch(err){throw new Error("".concat(err))}}async isTableExists(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.isTableExists(options)}catch(err){throw new Error("".concat(err))}}async deleteDatabase(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.deleteDatabase(options);return}catch(err){throw new Error("".concat(err))}}async isJsonValid(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.isJsonValid(options)}catch(err){throw new Error("".concat(err))}}async importFromJson(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.importFromJson(options)}catch(err){throw new Error("".concat(err))}}async exportToJson(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.exportToJson(options)}catch(err){throw new Error("".concat(err))}}async createSyncTable(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.createSyncTable(options)}catch(err){throw new Error("".concat(err))}}async setSyncDate(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.setSyncDate(options);return}catch(err){throw new Error("".concat(err))}}async getSyncDate(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.getSyncDate(options)}catch(err){throw new Error("".concat(err))}}async deleteExportedRows(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.deleteExportedRows(options);return}catch(err){throw new Error("".concat(err))}}async addUpgradeStatement(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.addUpgradeStatement(options);return}catch(err){throw new Error("".concat(err))}}async copyFromAssets(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.copyFromAssets(options);return}catch(err){throw new Error("".concat(err))}}async getFromHTTPRequest(options){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{await this.jeepSqliteElement.getFromHTTPRequest(options);return}catch(err){throw new Error("".concat(err))}}async getDatabaseList(){this.ensureJeepSqliteIsAvailable(),this.ensureWebstoreIsOpen();try{return await this.jeepSqliteElement.getDatabaseList()}catch(err){throw new Error("".concat(err))}}ensureJeepSqliteIsAvailable(){if(this.jeepSqliteElement===null)throw new Error("The jeep-sqlite element is not present in the DOM! Please check the @capacitor-community/sqlite documentation for instructions regarding the web platform.")}ensureWebstoreIsOpen(){if(!this.isWebStoreOpen)throw new Error('WebStore is not open yet. You have to call "initWebStore()" first.')}async getUrl(){throw this.unimplemented("Not implemented on web.")}async getMigratableDbList(options){throw console.log("getMigratableDbList",options),this.unimplemented("Not implemented on web.")}async addSQLiteSuffix(options){throw console.log("addSQLiteSuffix",options),this.unimplemented("Not implemented on web.")}async deleteOldDatabases(options){throw console.log("deleteOldDatabases",options),this.unimplemented("Not implemented on web.")}async moveDatabasesAndAddSuffix(options){throw console.log("moveDatabasesAndAddSuffix",options),this.unimplemented("Not implemented on web.")}async isSecretStored(){throw this.unimplemented("Not implemented on web.")}async setEncryptionSecret(options){throw console.log("setEncryptionSecret",options),this.unimplemented("Not implemented on web.")}async changeEncryptionSecret(options){throw console.log("changeEncryptionSecret",options),this.unimplemented("Not implemented on web.")}async clearEncryptionSecret(){throw console.log("clearEncryptionSecret"),this.unimplemented("Not implemented on web.")}async checkEncryptionSecret(options){throw console.log("checkEncryptionPassPhrase",options),this.unimplemented("Not implemented on web.")}async getNCDatabasePath(options){throw console.log("getNCDatabasePath",options),this.unimplemented("Not implemented on web.")}async createNCConnection(options){throw console.log("createNCConnection",options),this.unimplemented("Not implemented on web.")}async closeNCConnection(options){throw console.log("closeNCConnection",options),this.unimplemented("Not implemented on web.")}async isNCDatabase(options){throw console.log("isNCDatabase",options),this.unimplemented("Not implemented on web.")}async isDatabaseEncrypted(options){throw console.log("isDatabaseEncrypted",options),this.unimplemented("Not implemented on web.")}async isInConfigEncryption(){throw this.unimplemented("Not implemented on web.")}async isInConfigBiometricAuth(){throw this.unimplemented("Not implemented on web.")}async loadExtension(options){throw console.log("loadExtension",options),this.unimplemented("Not implemented on web.")}async enableLoadExtension(options){throw console.log("enableLoadExtension",options),this.unimplemented("Not implemented on web.")}};__name(_CapacitorSQLiteWeb,"CapacitorSQLiteWeb");let CapacitorSQLiteWeb=_CapacitorSQLiteWeb;export{CapacitorSQLiteWeb};
