var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});import{K as Keyboard,e as addEventListener,g as removeEventListener,b as componentOnReady,f as findClosestIonContent,h as KeyboardResize,j as raf,k as getScrollElement,l as scrollByPoint}from"./index-942249a9.js";/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */const cloneMap=new WeakMap,relocateInput=__name((componentEl,inputEl,shouldRelocate,inputRelativeY=0,disabledClonedInput=!1)=>{cloneMap.has(componentEl)!==shouldRelocate&&(shouldRelocate?addClone(componentEl,inputEl,inputRelativeY,disabledClonedInput):removeClone(componentEl,inputEl))},"relocateInput"),isFocused=__name(input=>input===input.getRootNode().activeElement,"isFocused"),addClone=__name((componentEl,inputEl,inputRelativeY,disabledClonedInput=!1)=>{const parentEl=inputEl.parentNode,clonedEl=inputEl.cloneNode(!1);clonedEl.classList.add("cloned-input"),clonedEl.tabIndex=-1,disabledClonedInput&&(clonedEl.disabled=!0),parentEl.appendChild(clonedEl),cloneMap.set(componentEl,clonedEl);const tx=componentEl.ownerDocument.dir==="rtl"?9999:-9999;componentEl.style.pointerEvents="none",inputEl.style.transform="translate3d(".concat(tx,"px,").concat(inputRelativeY,"px,0) scale(0)")},"addClone"),removeClone=__name((componentEl,inputEl)=>{const clone=cloneMap.get(componentEl);clone&&(cloneMap.delete(componentEl),clone.remove()),componentEl.style.pointerEvents="",inputEl.style.transform=""},"removeClone"),SCROLL_AMOUNT_PADDING=50,enableHideCaretOnScroll=__name((componentEl,inputEl,scrollEl)=>{if(!scrollEl||!inputEl)return()=>{};const scrollHideCaret=__name(shouldHideCaret=>{isFocused(inputEl)&&relocateInput(componentEl,inputEl,shouldHideCaret)},"scrollHideCaret"),onBlur=__name(()=>relocateInput(componentEl,inputEl,!1),"onBlur"),hideCaret=__name(()=>scrollHideCaret(!0),"hideCaret"),showCaret=__name(()=>scrollHideCaret(!1),"showCaret");return addEventListener(scrollEl,"ionScrollStart",hideCaret),addEventListener(scrollEl,"ionScrollEnd",showCaret),inputEl.addEventListener("blur",onBlur),()=>{removeEventListener(scrollEl,"ionScrollStart",hideCaret),removeEventListener(scrollEl,"ionScrollEnd",showCaret),inputEl.removeEventListener("blur",onBlur)}},"enableHideCaretOnScroll"),SKIP_SELECTOR="input, textarea, [no-blur], [contenteditable]",enableInputBlurring=__name(()=>{let focused=!0,didScroll=!1;const doc=document,onScroll=__name(()=>{didScroll=!0},"onScroll"),onFocusin=__name(()=>{focused=!0},"onFocusin"),onTouchend=__name(ev=>{if(didScroll){didScroll=!1;return}const active=doc.activeElement;if(!active||active.matches(SKIP_SELECTOR))return;const tapped=ev.target;tapped!==active&&(tapped.matches(SKIP_SELECTOR)||tapped.closest(SKIP_SELECTOR)||(focused=!1,setTimeout(()=>{focused||active.blur()},50)))},"onTouchend");return addEventListener(doc,"ionScrollStart",onScroll),doc.addEventListener("focusin",onFocusin,!0),doc.addEventListener("touchend",onTouchend,!1),()=>{removeEventListener(doc,"ionScrollStart",onScroll,!0),doc.removeEventListener("focusin",onFocusin,!0),doc.removeEventListener("touchend",onTouchend,!1)}},"enableInputBlurring"),SCROLL_ASSIST_SPEED=.3,getScrollData=__name((componentEl,contentEl,keyboardHeight)=>{var _a;const itemEl=(_a=componentEl.closest("ion-item,[ion-item]"))!==null&&_a!==void 0?_a:componentEl;return calcScrollData(itemEl.getBoundingClientRect(),contentEl.getBoundingClientRect(),keyboardHeight,componentEl.ownerDocument.defaultView.innerHeight)},"getScrollData"),calcScrollData=__name((inputRect,contentRect,keyboardHeight,platformHeight)=>{const inputTop=inputRect.top,inputBottom=inputRect.bottom,visibleAreaTop=contentRect.top,visibleAreaBottom=Math.min(contentRect.bottom,platformHeight-keyboardHeight),safeAreaTop=visibleAreaTop+15,distanceToBottom=visibleAreaBottom-SCROLL_AMOUNT_PADDING-inputBottom,distanceToTop=safeAreaTop-inputTop,desiredScrollAmount=Math.round(distanceToBottom<0?-distanceToBottom:distanceToTop>0?-distanceToTop:0),scrollAmount=Math.min(desiredScrollAmount,inputTop-visibleAreaTop),duration=Math.abs(scrollAmount)/SCROLL_ASSIST_SPEED,scrollDuration=Math.min(400,Math.max(150,duration));return{scrollAmount,scrollDuration,scrollPadding:keyboardHeight,inputSafeY:-(inputTop-safeAreaTop)+4}},"calcScrollData"),PADDING_TIMER_KEY="$ionPaddingTimer",setScrollPadding=__name((contentEl,paddingAmount,clearCallback)=>{const timer=contentEl[PADDING_TIMER_KEY];timer&&clearTimeout(timer),paddingAmount>0?contentEl.style.setProperty("--keyboard-offset","".concat(paddingAmount,"px")):contentEl[PADDING_TIMER_KEY]=setTimeout(()=>{contentEl.style.setProperty("--keyboard-offset","0px"),clearCallback&&clearCallback()},120)},"setScrollPadding"),setClearScrollPaddingListener=__name((inputEl,contentEl,doneCallback)=>{const clearScrollPadding=__name(()=>{contentEl&&setScrollPadding(contentEl,0,doneCallback)},"clearScrollPadding");inputEl.addEventListener("focusout",clearScrollPadding,{once:!0})},"setClearScrollPaddingListener");let currentPadding=0;const SKIP_SCROLL_ASSIST="data-ionic-skip-scroll-assist",enableScrollAssist=__name((componentEl,inputEl,contentEl,footerEl,keyboardHeight,enableScrollPadding,keyboardResize,disableClonedInput=!1)=>{const addScrollPadding=enableScrollPadding&&(keyboardResize===void 0||keyboardResize.mode===KeyboardResize.None),focusIn=__name(async()=>{if(inputEl.hasAttribute(SKIP_SCROLL_ASSIST)){inputEl.removeAttribute(SKIP_SCROLL_ASSIST);return}jsSetFocus(componentEl,inputEl,contentEl,footerEl,keyboardHeight,addScrollPadding,disableClonedInput)},"focusIn");return componentEl.addEventListener("focusin",focusIn,!0),()=>{componentEl.removeEventListener("focusin",focusIn,!0)}},"enableScrollAssist"),setManualFocus=__name(el=>{document.activeElement!==el&&(el.setAttribute(SKIP_SCROLL_ASSIST,"true"),el.focus())},"setManualFocus"),jsSetFocus=__name(async(componentEl,inputEl,contentEl,footerEl,keyboardHeight,enableScrollPadding,disableClonedInput=!1)=>{if(!contentEl&&!footerEl)return;const scrollData=getScrollData(componentEl,contentEl||footerEl,keyboardHeight);if(contentEl&&Math.abs(scrollData.scrollAmount)<4){setManualFocus(inputEl),enableScrollPadding&&contentEl!==null&&(setScrollPadding(contentEl,currentPadding),setClearScrollPaddingListener(inputEl,contentEl,()=>currentPadding=0));return}if(relocateInput(componentEl,inputEl,!0,scrollData.inputSafeY,disableClonedInput),setManualFocus(inputEl),raf(()=>componentEl.click()),enableScrollPadding&&contentEl&&(currentPadding=scrollData.scrollPadding,setScrollPadding(contentEl,currentPadding)),typeof window<"u"){let scrollContentTimeout;const scrollContent=__name(async()=>{scrollContentTimeout!==void 0&&clearTimeout(scrollContentTimeout),window.removeEventListener("ionKeyboardDidShow",doubleKeyboardEventListener),window.removeEventListener("ionKeyboardDidShow",scrollContent),contentEl&&await scrollByPoint(contentEl,0,scrollData.scrollAmount,scrollData.scrollDuration),relocateInput(componentEl,inputEl,!1,scrollData.inputSafeY),setManualFocus(inputEl),enableScrollPadding&&setClearScrollPaddingListener(inputEl,contentEl,()=>currentPadding=0)},"scrollContent"),doubleKeyboardEventListener=__name(()=>{window.removeEventListener("ionKeyboardDidShow",doubleKeyboardEventListener),window.addEventListener("ionKeyboardDidShow",scrollContent)},"doubleKeyboardEventListener");if(contentEl){const scrollEl=await getScrollElement(contentEl),totalScrollAmount=scrollEl.scrollHeight-scrollEl.clientHeight;if(scrollData.scrollAmount>totalScrollAmount-scrollEl.scrollTop){inputEl.type==="password"?(scrollData.scrollAmount+=SCROLL_AMOUNT_PADDING,window.addEventListener("ionKeyboardDidShow",doubleKeyboardEventListener)):window.addEventListener("ionKeyboardDidShow",scrollContent),scrollContentTimeout=setTimeout(scrollContent,1e3);return}}scrollContent()}},"jsSetFocus"),INPUT_BLURRING=!0,startInputShims=__name(async(config,platform)=>{const doc=document,isIOS=platform==="ios",isAndroid=platform==="android",keyboardHeight=config.getNumber("keyboardHeight",290),scrollAssist=config.getBoolean("scrollAssist",!0),hideCaret=config.getBoolean("hideCaretOnScroll",isIOS),inputBlurring=config.getBoolean("inputBlurring",isIOS),scrollPadding=config.getBoolean("scrollPadding",!0),inputs=Array.from(doc.querySelectorAll("ion-input, ion-textarea")),hideCaretMap=new WeakMap,scrollAssistMap=new WeakMap,keyboardResizeMode=await Keyboard.getResizeMode(),registerInput=__name(async componentEl=>{await new Promise(resolve=>componentOnReady(componentEl,resolve));const inputRoot=componentEl.shadowRoot||componentEl,inputEl=inputRoot.querySelector("input")||inputRoot.querySelector("textarea"),scrollEl=findClosestIonContent(componentEl),footerEl=scrollEl?null:componentEl.closest("ion-footer");if(!inputEl)return;if(scrollEl&&hideCaret&&!hideCaretMap.has(componentEl)){const rmFn=enableHideCaretOnScroll(componentEl,inputEl,scrollEl);hideCaretMap.set(componentEl,rmFn)}if(!(inputEl.type==="date"||inputEl.type==="datetime-local")&&(scrollEl||footerEl)&&scrollAssist&&!scrollAssistMap.has(componentEl)){const rmFn=enableScrollAssist(componentEl,inputEl,scrollEl,footerEl,keyboardHeight,scrollPadding,keyboardResizeMode,isAndroid);scrollAssistMap.set(componentEl,rmFn)}},"registerInput"),unregisterInput=__name(componentEl=>{if(hideCaret){const fn=hideCaretMap.get(componentEl);fn&&fn(),hideCaretMap.delete(componentEl)}if(scrollAssist){const fn=scrollAssistMap.get(componentEl);fn&&fn(),scrollAssistMap.delete(componentEl)}},"unregisterInput");inputBlurring&&INPUT_BLURRING&&enableInputBlurring();for(const input of inputs)registerInput(input);doc.addEventListener("ionInputDidLoad",ev=>{registerInput(ev.detail)}),doc.addEventListener("ionInputDidUnload",ev=>{unregisterInput(ev.detail)})},"startInputShims");export{startInputShims};
